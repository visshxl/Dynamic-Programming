https://leetcode.com/problems/delete-operation-for-two-strings/
class Solution {
public:
// exactly same as the Longest Common Subsequence
    int LCS(int i, int j, string& word1, string& word2, vector<vector<int>>& dp){
        if(i==0 || j==0) return 0;

        if(dp[i][j]!=-1) return dp[i][j];

        if(word1[i-1]==word2[j-1]) return dp[i][j]=1+LCS(i-1, j-1, word1, word2, dp);
        return dp[i][j]=max(LCS(i-1, j, word1, word2, dp), LCS(i, j-1, word1, word2, dp));
    }

    int minDistance(string word1, string word2) {
        vector<int> prev(word2.size()+1, 0);
        vector<int> curr(word2.size()+1, 0);

        for(int i=1; i<=word1.size(); i++){
            for(int j=1; j<=word2.size(); j++){
                if(word1[i-1]==word2[j-1]) curr[j]=1+prev[j-1];
                else curr[j]=max(curr[j-1], prev[j]);
            }
            prev=curr;
        }
        return (word1.size()+word2.size())-(prev[word2.size()]*2);
    }
};
// dp 30
